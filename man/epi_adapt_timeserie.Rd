% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cdc_channel.R
\name{epi_adapt_timeserie}
\alias{epi_adapt_timeserie}
\alias{epi_create_channel}
\alias{epi_join_channel}
\alias{epi_plot_channel}
\alias{epi_observe_alert}
\title{Create an Endemic Channel}
\usage{
epi_adapt_timeserie(db_disease, db_population, var_admx, var_year,
  var_week, var_event_count, var_population)

epi_create_channel(time_serie, disease_name = "disease_name",
  method = "gmean_1sd")

epi_join_channel(disease_channel, disease_now, adm_columns = NULL)

epi_plot_channel(joined_channel, n_breaks = 10)

epi_observe_alert(joined_channel, threshold = upp_95,
  alert_distance = 3)
}
\arguments{
\item{db_disease}{disease surveillance datasets}

\item{db_population}{estimated population for each adm area}

\item{var_admx}{administrative code r name as string}

\item{var_year}{year of agregated observations}

\item{var_week}{week of agregated observations}

\item{var_event_count}{number of events per week-year}

\item{var_population}{estimated population at that year}

\item{time_serie}{time serie}

\item{disease_name}{free code name of diseases}

\item{method}{specify the method. "gmean_1sd" is geometric mean w/ 1 standard deviation (default). "gmean_2sd" is gmean w/ 2 sd. "gmean_ci" is gmean w/ 95 percent confidence intervals.}

\item{disease_channel}{salida de epi_*_mutate}

\item{disease_now}{nueva base de vigilancia}

\item{adm_columns}{dataframe with names of the administrative code or name strings}

\item{joined_channel}{base de datos unida}

\item{n_breaks}{number of breaks in x axis}
}
\value{
canal endemico, union y grafico
}
\description{
Exploratory Alarm Tool for Outbreak Detection.
}
\section{Functions}{
\itemize{
\item \code{epi_adapt_timeserie}: 

\item \code{epi_create_channel}: create endemic channel

\item \code{epi_join_channel}: join preliminary steps

\item \code{epi_plot_channel}: create ggplot

\item \code{epi_observe_alert}: create ggplot
}}

\examples{

library(tidyverse)

# import data -------------------------------------------------------------

dengv <-
  readr::read_csv("https://dengueforecasting.noaa.gov/Training/Iquitos_Training_Data.csv") \%>\%
  mutate(year = lubridate::year(week_start_date),
         epiweek = lubridate::epiweek(week_start_date)) \%>\%
  mutate(adm="iquitos") \%>\%
  # cases per season - replace wiht a dummy year
  mutate(year = str_replace(season,"(.+)/(.+)","\\\\1") \%>\% as.double())

# dengv \%>\% count(year,season,lag_year)

dengv \%>\% glimpse()

# dengv \%>\%
#   ggplot(aes(x = week_start_date,y = total_cases)) +
#   geom_col()

popdb <-
  readr::read_csv("https://dengueforecasting.noaa.gov/PopulationData/Iquitos_Population_Data.csv") \%>\%
  janitor::clean_names() \%>\%
  mutate(adm="iquitos")

popdb \%>\% glimpse()

# popdb \%>\% count(year)
# dengv \%>\% count(year)
# dengv \%>\% left_join(popdb)

# first, adapt ------------------------------------------------------------

epi_adapted <-
  epi_adapt_timeserie(db_disease = dengv,
                      db_population = popdb,
                      var_admx = adm,
                      # var_year = year, # must be a common variable between datasets
                      # var_week = epiweek,
                      var_year = year, # not working - need to create pseudo-years
                      var_week = season_week,
                      var_event_count = total_cases,
                      var_population = estimated_population)

# second, filter ----------------------------------------------------------

disease_now <- epi_adapted \%>\%
  filter(var_year==max(var_year))

disease_pre <- epi_adapted \%>\%
  filter(var_year!=max(var_year))

# third, create -----------------------------------------------------------

disease_channel <-
  epi_create_channel(time_serie = disease_pre,
                     disease_name = "dengv")

disease_channel

# fourth, ggplot it -------------------------------------------------------

epi_join_channel(disease_channel = disease_channel,
                 disease_now = disease_now) \%>\%
  # ggplot
  epi_plot_channel() +
  labs(title = "DENGV Endemic Channel. Iquitos, Peru 2008/2009",
       caption = "Source: https://dengueforecasting.noaa.gov/",
       # x = "epiweeks",
       x = "Seasonal week",
       y = "Number of cases") +
  theme_bw()


}
